---
# Setup MongoDB

- name: Create MongoDB data directory
  file:
    path: "{{ webportal_docker_data_mongo_dir }}"
    state: directory
    owner: "{{ webportal_user }}"
    group: "{{ webportal_user }}"

- name: Check if MongoDB keyfile is present
  stat:
    path: "{{ webportal_docker_data_mongo_dir }}/mgkey"
  register: mongo_db_mgkey

- name: Upload and set permissions to MongoDB keyfile
  block:

    - name: Upload MongoDB keyfile
      copy:
        content: "{{ webportal_mongo_mgkey_content }}"
        dest: "{{ webportal_docker_data_mongo_dir }}/mgkey"
        owner: "{{ webportal_user }}"
        group: "{{ webportal_user }}"
        mode: '0400'

    - name: Fix MongoDB keyfile permissions
      community.docker.docker_container:
        name: mongo-fix-perms
        image: mongo:4.4.1
        state: started
        auto_remove: true
        container_default_behavior: no_defaults
        volumes:
          - "{{ webportal_docker_data_mongo_dir }}/mgkey:/data/mgkey"
        command: chown mongodb:mongodb /data/mgkey
  
  when: mongo_db_mgkey.stat.exists == false

- name: Check if MongoDB was initialized
  stat:
    path: "{{ webportal_docker_data_mongo_dir }}/db"
  register: mongo_db_dir

- name: Initialize MongoDB once
  block:

    - name: Initialize MongoDB with admin username and password
      community.docker.docker_container:
        name: mongo
        image: mongo:4.4.1
        command: --keyFile=/data/mgkey --replSet=skynet
        state: started
        recreate: yes
        container_default_behavior: no_defaults
        env:
          MONGO_INITDB_ROOT_USERNAME: "{{ webportal_mongo_init_username }}"
          MONGO_INITDB_ROOT_PASSWORD: "{{ webportal_mongo_init_password }}}"
        exposed_ports:
          - 27017:27017
        volumes:
          - "{{ webportal_docker_data_mongo_dir }}/db:/data/db"
          - "{{ webportal_docker_data_mongo_dir }}/mgkey:/data/mgkey"
    
  # Remove mongo/db directory if the initialization fails, so the block can
  # execute on next run
  rescue:

    - name: Remove mongo/db directory on initialization failure
      ansible.builtin.file:
        path: "{{ webportal_docker_data_mongo_dir }}/db"
        state: absent
    
    - name: Force a failure after recovery
      ansible.builtin.command: /bin/false
  
  always:

    - name: Remove MongoDB initialization container
      community.docker.docker_container:
        name: mongo
        state: absent
        container_default_behavior: no_defaults
    
    - name: Check if MongoDB was initialized (mongo/db was created)
      stat:
        path: "{{ webportal_docker_data_mongo_dir }}/db"
      register: mongo_db_dir_after
    
    - name: Fail if MongoDB initialization failed (mongo/db was not created)
      ansible.builtin.command: /bin/false
      when: mongo_db_dir_after.stat.exists == false
  
  when: mongo_db_dir.stat.exists == false